// import ResourceCache from 'frontend-lib/utility/cache/ResourceCache.js'
// import loadResourceLinks from 'social-components/utility/post/loadResourceLinks.js'

// import getCommentLengthLimit from './comment/getCommentLengthLimit.js'
// import getConfiguration() from '../configuration.js'

// import shouldMinimizeGeneratedPostLinkBlockQuotes from './post/shouldMinimizeGeneratedPostLinkBlockQuotes.js'

// Eventually, it was decided that perhaps `loadResourceLinksSync()`
// function isn't that useful and can be removed.
// export function loadResourceLinksSync(comment, { mode, messages, getCommentById }) {
// 	loadResourceLinks(comment, {
// 		youTubeApiKey: getConfiguration().youtubeApiKey,
// 		cache: ResourceCache,
// 		messages: getResourceMessages(messages),
// 		contentMaxLength: getCommentLengthLimit(mode),
// 		minimizeGeneratedPostLinkBlockQuotes: shouldMinimizeGeneratedPostLinkBlockQuotes(),
// 		onContentChange: () => onCommentContentChange(comment, { getCommentById, renderComments }),
// 		// And maybe the `sync: true` flag can be removed
// 		// from `social-components` too, because it was added
// 		// specifically for this use case.
// 		sync: true
// 	})
// }

export function getResourceMessages(messages) {
	return {
		videoNotFound: messages && messages.post && messages.post.videoNotFound
	}
}

export function onCommentContentChange(comment, { getCommentById, renderComments }) {
	// When data is fetched from an imageboard via the `imageboard` library,
	// each comment has an `.onContentChange()` function added by that library.
	// It can be used to update autogenerated quotes in all replies to this comment.
	// For each "descendant" reply to the `comment`, it would update all
	// `post-link` quotes to the comment with the new `.content` that is
	// autogenerated from the updated comment content.
	//
	// The `.onContentChange()` function would walk all "descendant" replies
	// and update their `content`, but it wouldn't re-render them.
	// To re-render the affected "descendant" replies, `renderComment(id)`
	// function is called.
	//
	if (comment.onContentChange) {
		// Since the affected replies' autogenerated quotes have been re-generated,
		// the affected replies should now be re-rendered.
		// This is only required if they have already been rendered.
		// If they haven't yet, then there's no need for any re-rendering.
		const affectedDescendantCommentIds = comment.onContentChange({ getCommentById })
		if (renderComments) {
			renderComments(affectedDescendantCommentIds)
		}
	}
}