import { getPostText } from 'webapp-frontend/src/utility/post'
import trimText from 'webapp-frontend/src/utility/trimText'

/**
 * Adds "in-reply-to" quotes.
 * Has some CPU usage.
 */
export default function setInReplyToQuotes(content, posts, threadId, contentParent) {
	// Post content can be empty.
	if (!content) {
		return
	}
	if (typeof content === 'string') {
		return
	}
	if (Array.isArray(content)) {
		for (const part of content) {
			setInReplyToQuotes(part, posts, threadId, content)
		}
		return
	}
	if (content.type === 'post-link') {
		let postPeek
		if (content.threadId === threadId) {
			content.post = posts.find(_ => _.id === content.postId)
			// Comments can be deleted.
			if (content.post && !content.post.hidden) {
				const text = getPostText(content.post, { excludeQuotes: true })
				if (text) {
					postPeek = trimText(text, 150)
					const index = contentParent.indexOf(content)
					const possibleQuote = contentParent[index + 2]
					if (possibleQuote && possibleQuote.type === 'inline-quote') {
						// Already quoted.
					} else {
						// Only inject quotes when messages links are at the end of the line.
						if (contentParent[index + 1] === '\n') {
							contentParent.splice(index + 1, 0, '\n')
							contentParent.splice(index + 2, 0, { type: 'inline-quote', autogenerated: true, content: postPeek })
						}
					}
				}
			}
		}
	}
}