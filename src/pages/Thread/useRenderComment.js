import { useCallback } from 'react'

export default function useRenderComment({
	virtualScroller
}) {
	// `renderComment()` is called whenever there's a "parent" comment
	// whose `content` did change (for example, when YouTube video links got loaded,
	// or Twitter links got loaded, etc), and when there're any "replies" to that
	// parent comment having "autogenerated" quotes generated from that parent comment's content.
	// It also doesn't stop at that level, and goes arbitrarily deep into the replies tree,
	// because there might be "deeper" replies to a reply having an "autogenerated" quote,
	// and those "deeper" replies' "autogenerated" quotes might be autogenerated from that
	// "autogenerated" quote, so the whole thing is recursive.
	// So, when the parent comment's `content` changes (for example, as a result of
	// loading "resource" links), all of the affected (descendant) "replies" should be
	// re-rendered too.
	const renderComment = useCallback((id) => {
		// `loadResourceLinks()` calls `renderComment()` on every replying comment,
		// regardless of whether such replying comment is rendered or not.
		// Also, loading resource links is done "asynchronously", and that
		// process may finish already after the comment tree itself is unmounted.
		if (virtualScroller.current) {
			// `VirtualScroller` will find the index of the item by its id,
			// because `getItemId()` parameter will also be passed.
			virtualScroller.current.renderItem({ id })
		}
	}, [])
}