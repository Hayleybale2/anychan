@import "../../styles/common.css";

.ChannelPage {
	@mixin upto-m {
		--Toolbar-marginTop: calc(var(--unit) * 0.5);
		--Toolbar-marginBottom: calc(var(--unit) * 0.5);
	}

	--ChannelHeader-height: var(--ChannelThreadHeader-height);
	--ChannelHeader-paddingLeft: var(--ChannelThreadHeader-paddingLeft);
	--ChannelHeader-fontSize: var(--ChannelThreadHeader-fontSize);
	--ChannelHeader-fontWeight: var(--ChannelThreadHeader-fontWeight);
	--ChannelHeader-textAlign: var(--ChannelThreadHeader-textAlign);

	.ChannelHeader {
		position: sticky;
		top: 0;
		z-index: 1;
		height: calc(var(--ChannelThreadHeader-height) + var(--ChannelThreadHeader-borderWidth));
		width: var(--ChannelThreadHeader-width);
		margin-left: var(--ChannelThreadHeader-marginLeft);
		margin-right: var(--ChannelThreadHeader-marginRight);
		padding-left: var(--ChannelThreadHeader-paddingLeft);
		border-bottom: var(--ChannelThreadHeader-borderWidth) solid var(--ChannelThreadHeader-borderColor);
		background-color: var(--ChannelThreadHeader-backgroundColor);
	}

	.ChannelHeader-heading {
		text-align: var(--ChannelThreadHeader-textAlign);
	}
}

.ChannelPage-commentsListContainer {
	/* `.CommentsList` element already has a "negative" `margin-top`,
	   so `margin-top` is set on `.ThreadPage-commentsListContainer` element instead. */
	/* `--Comment-marginTop` is not defined at `:root` level. */
	margin-top: var(--Comment-marginTop);
}

.ChannelPage--latestComments {
	/*
	.ChannelPage-commentsListContainer {
		margin-top: 0;
	}
	*/

	.Comment-spacer--aboveFirstSpacerLine {
		display: none;
	}

	.Comment-spacerLine--first {
		display: none;
	}
}

.Webpage--channel {
	--Comment-marginTop--topLevel: var(--Comment-marginTop--topLevelChannelPage);

	.Comment-container {
		align-items: stretch;
	}
}

.ChannelPage-threads {
	.CommentClickableWrapper--rootComment {
		width: 100%;
	}
}

/*
.ChannelPage-threads {
	@mixin l-plus {
		margin-top: var(--ChannelOrThreadPage-marginTop--largeScreen);
	}
}
*/

/* This CSS class is also used for `.ThreadPage-stats`. */
/*.ChannelHeader-toolbar {
	@mixin upto-m {
		margin-bottom: calc(-1 * var(--unit));
	}*/
	/*
	@mixin l-plus {
		position: absolute;
		right: 0;
		top: calc((var(--Comment-marginTop--topLevel) - var(--ChannelOrThreadPage-marginTop--largeScreen) - var(--MenuIcon-width)) / 2);
	}
	*/
/*}*/

.ChannelPage-apiChannelEmptyNoteTwoChannel {
	margin-top: calc(var(--unit) * 2);
	margin-bottom: calc(var(--unit) * 2);
	text-align: center;
}

.Comment--latestComments {
	margin-left: var(--Comment-marginLeft--latestComments);
	width: calc(100% - var(--Comment-marginLeft--latestComments));
}

.ChannelPage--latestComments {
	--Comment-marginTop--topLevel: calc(var(--Comment-marginTop--nested) * 2);
}

.ChannelPage--latestComments {
	.CommentTree--topLevel {
		> .CommentTree-replies {
			margin-left: var(--CommentTree-padding);
		}
	}
}

.ChannelPage-threads--tiles {
  display: grid;
  place-items: center;
  gap: var(--Comment-marginTop); /* calc(3 * var(--unit)); */

  /* These values must be equal to those in `getColumnsCount()`
     in `pages/Channel/Channel.js`. */
	@mixin upto-xs {
  	grid-template-columns: repeat(1, 1fr);
  }
	@mixin s {
  	grid-template-columns: repeat(2, 1fr);
  }
	@mixin m {
  	grid-template-columns: repeat(3, 1fr);
  }
	@mixin l {
  	grid-template-columns: repeat(3, 1fr);
  }
	@mixin xl {
  	grid-template-columns: repeat(3, 1fr);
  }
	@mixin xxl-plus {
  	grid-template-columns: repeat(4, 1fr);
  }

	align-items: flex-start;

	margin-top: var(--Comment-marginTop);

  --Post-minWidth: 0px;

  .Comment-container {
  	/* "By default, a grid item cannot be smaller than the size of its content.
        Grid items have an initial size of min-width: auto and min-height: auto.
        You can override this behavior by setting grid items to min-width: 0, min-height: 0 or overflow with any value other than visible." */
  	/* https://stackoverflow.com/questions/43311943/prevent-content-from-expanding-grid-items */
  	min-width: 0;

  	/* Stretch each card to the full width of its column. */
  	width: 100%;
  }

  .Comment-spacer {
  	--Comment-marginTop: 0;
  }

  .Comment {
  	/* Place comment content below comment thumbnail. */
  	flex-direction: column;

  	/* No padding is required on the left side of a comment thumbnail element. */
  	--PostThumbnail-maxWidth: var(--PostThumbnail-width);
  	--PostThumbnail-marginRight: 0px;
  	--PostThumbnail-marginTop: 0px;
		--PostThumbnail-marginBottom: var(--Post-paddingLeft);
  }

  .Comment-thumbnail {
  	/* Center the thumbnail image horizontally inside ".Comment-thumbnail". */
  	justify-content: center;

  	/* Center the ".Comment-thumbnail" itself. */
    margin-left: auto;
    margin-right: auto;
  }
}

.ChannelPage-nothingFound {
	margin-top: calc(var(--unit) * 3);
	text-align: center;
}