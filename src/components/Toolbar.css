@import "../styles/common.css";

.Toolbar {
	display: flex;
	justify-content: flex-end;
	margin-top: var(--Toolbar-marginTop);
	margin-bottom: var(--Toolbar-marginTop);
	/*padding-left: calc(var(--PageContent-paddingLeft) + var(--PageContent-paddingLeft--nonContentSection));*/
	/*padding-right: calc(var(--PageContent-paddingLeft) + var(--PageContent-paddingLeft--nonContentSection));*/
	padding-left: calc(var(--PageContent-paddingLeft) + var(--Post-paddingLeft));
	padding-right: calc(var(--PageContent-paddingLeft) + var(--Post-paddingLeft));
	color: var(--Toolbar-color);

	--MenuIcon-width: var(--ToolbarIcon-width);
	--Menu-color--selected: var(--Toolbar-color--selected);
	--Menu-color--active: var(--Toolbar-color--active);
}

/* Added `.Toolbar` parent selector so that the `.menu .menu-item` styles
   don't overwrite the `.Toolbar-item--channelView` styles in production mode
   when Webpack decides to put all CSS in a single file
   with `.menu .menu-item` styles being placed after `.Toolbar-item--channelView` styles. */
.Toolbar {
	.Toolbar-item--channelView {
		&.menu-item {
			width: calc(var(--MenuIcon-width) * 1.5);

			.menu-item__icon {
		    width: 150%;
		    height: 150%;

				g {
					/* `!important` overrides the default `stroke-width`
					   set via `style` on a `<g/>` element of the SVG image. */
					stroke-width: 5 !important;
				}
			}

			&.menu-item--selected {
				.menu-item__icon {
					g {
						/* `!important` overrides the `stroke-width` `!important`
						   set on a non-selected `.menu-item` CSS class. */
						stroke-width: 10 !important;
					}
				}
			}
		}
	}
}

/*.Toolbar-item--channelViewRightmost {
	margin-right: calc(-1 * var(--MenuIcon-width) * 0.25);
}*/

/*.Toolbar-item--channelViewNewThreads {
	width: calc(var(--MenuIcon-width) * 1.5);
}*/