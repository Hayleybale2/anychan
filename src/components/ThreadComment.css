@import "../styles/common";

/* Removing `PostQuoteBlockMarker` turned out to reduce the overall readability of page content. */
/*
:root {
	--PostQuoteBlockMarker-width: 1px;
	--PostQuoteBlockMarker-opacity: 1;
	--PostQuoteBlockMarker-opacity--generated: 1;
	--PostQuoteBlockMarker-color: var(--PostQuoteBlock-borderColor);
	--PostQuoteBlockMarker-color--generated: var(--PostQuoteBlock-borderColor--generated);
}
*/

.thread-comment {
	padding-top: var(--Post-padding--vertical);
	padding-bottom: var(--Post-padding--vertical);
	padding-left: var(--Post-padding--horizontal);
	padding-right: var(--Post-padding--horizontal);
}

.thread-comment--compact {
	--Post-padding--vertical: var(--Post-padding--verticalCompact);
}

/* Thread comment styles begin. */

.thread-comment__thumbnail {
	display: none;
}

.comment-tree__comment--nested {
	border-left: var(--CommentSeparator-width) solid var(--CommentSeparator-color);
}

.thread-comment--thread {
	padding-top: 0;
	padding-bottom: 0;
	.thread-comment__thumbnail,
	.thread-comment__comment {
		padding-top: var(--Post-padding--vertical);
		padding-bottom: var(--Post-padding--vertical);
	}
	/* Reset `box-shadow` set by `.content-section`. */
	/*box-shadow: none;*/
	background-color: var(--Content-backgroundColor);
	/*@mixin upto-s {*/
		border-top: var(--CommentSeparator-width) solid var(--CommentSeparator-color);
		border-bottom: var(--CommentSeparator-width) solid var(--CommentSeparator-color);
	&.thread-comment--opening {
		/* Thread cards on board page have top/bottom borders
		   with color `var(--Content-color-200)` on small screens.
		   Having the same top border color on thread page
		   helps the transition from board to thread to be
		   visually a bit more seamless. */
		border-top-color: var(--Content-color-200);
	}
	/*}*/
	/*@mixin m-plus {*/
		/* Adding a transparent border to post thumbnail so that
		   the comment's height doesn't change when its replies are shown
		   resulting in borders on `__thumbnail` and `__comment` being replaced
		   with a border on `.thread-comment` itself.
		   When using `virtual-scroller` it's better to not change
		   item height, if not required. */
		/*
		.thread-comment__thumbnail {
			border-bottom: var(--CommentSeparator-width) solid transparent;
		}
		.thread-comment__comment {
			border-bottom: var(--CommentSeparator-width) solid var(--CommentSeparator-color);
		}
		*/
	/*}*/
	@mixin m-plus {
		box-shadow: inset 0 0 0 1px var(--CommentSeparator-color);
	}
}

.thread-comment--board {
	@mixin upto-s {
		border-top: 1px solid var(--Content-color-200);
		border-bottom: 1px solid var(--Content-color-200);
	}
	@mixin m-plus {
		box-shadow: inset 0 0 0 1px var(--Content-color-200), var(--ContentSection-shadow);
	}
}

@mixin m-plus {
	:root {
		--PostQuoteBlock-borderWidth--right: 1px;
	}
}

/* Using a dedicated element instead of `margin-top`
   because `VirtualScroller` requires not having gaps between list items. */
.thread-page__comments {
	.thread-comment__margin {
		height: var(--Comment-marginTop);
	}
}

.board-page__threads {
	/* Thread cards are clickable, and comment margin shouldn't be. */
	.thread-comment__margin {
		margin-top: var(--Comment-marginTop--boardPage);
	}
}

/* Add some left padding to first-level comment tree branch.
	If comments don't have any side padding
	then the root replies branch line would be ineligible
	because it would be drawn at the very screen edge (mobile devices).
	This CSS variable can be used for styling such special case. */
@mixin upto-s {
	:root {
		--CommentTreeBranch-paddingLeft--firstLevel: 0.25;
	}
	/* Setting `--PostThumbnailContainer-width` CSS variable on `<body/>`
	   because `--PostThumbnail-maxWidth` is defined on `<body/>`
	   because it's default value is defined on `:root`. */
	body {
		--PostThumbnailContainer-width: 0px;
	}
}

/* Move the first attachment to the left side of the comment on large screens. */
/* (classic imageboard message style) */
@mixin m-plus {
	/* Setting `--PostThumbnailContainer-width` CSS variable on `<body/>`
	   because `--PostThumbnail-maxWidth` is defined on `<body/>`
	   because it's default value is defined on `:root`. */
	body {
		--PostThumbnailContainer-width: calc(var(--PostThumbnail-maxWidth) + 2 * var(--Picture-borderWidth) + var(--PostThumbnail-marginRight));
	}

	/*.thread-comment--thread {*/
		/* Using `margin-right` instead of `padding-right` here
		   so that the expanded replies don't have their bottom border
		   extending further to the right than the "..." (more actions)
		   button of a post. */
		/*margin-right: var(--Post-padding--horizontal);*/
		/*padding-right: 0px;*/
	/*}*/

	.thread-comment--thumbnail {
		/* PostQuoteBlock. */
		--PostQuoteBlock-paddingLeft: var(--PostQuoteBlock-paddingLeft--thumbnail);
		--PostQuoteBlock-paddingRight: var(--PostQuoteBlock-paddingLeft);
		--PostQuoteBlock-marginRight: var(--PostQuoteBlock-paddingLeft);
		/* PostCode. */
		--PostCode-paddingLeft: var(--PostQuoteBlock-paddingLeft);
		--PostCode-paddingRight: var(--PostQuoteBlock-paddingRight);
		--PostCode-marginRight: var(--PostQuoteBlock-marginRight);
		display: flex;
	}

	/* Hide the first post attachment if it's already
	   being shown as the comment thumbnail. */
	.thread-comment--has-thumbnail {
		.post__attachments {
			.post__attachment-thumbnail--post-thumbnail-candidate {
				display: none;
			}
		}
	}

	.thread-comment__thumbnail {
		display: flex;
		justify-content: flex-end;
		/* In case of changing these also change `.Sidebar`'s
		   `flex-basis` accordingly in `Application.css`. */
		width: var(--PostThumbnailContainer-width);
		min-width: var(--PostThumbnailContainer-width);
		/* Using `margin-right` instead of `padding-right`
		   so that it's not included in `width`. */
		/*margin-right: var(--PostThumbnail-marginRight);*/
		/* Using `padding-right` instead of `margin-right` here
		   so that `border-bottom` is continuous. */
		/* This was relevant for the old design, not anymore though. */
		padding-right: var(--PostThumbnail-marginRight);
		margin-top: 0.2em;
	}

	/* Both on board page and thread page. */
	.thread-comment {
		padding-left: calc(var(--Post-padding--horizontal) + var(--PostQuoteBlock-paddingLeft));
	}

	/* On thread page:
	   1. If a comment has no attachments, then don't show the blank left part of it.
	   2. If a comment is short, then don't expand it to full page width.
	   That's only for comments that aren't part of an "expanded replies tree",
	   because otherwise such tree wouldn't render correctly.
	*/
	.thread-page__comments {
		.thread-comment--has-no-thumbnail:not(.comment-tree__comment--nested):not(.comment-tree__comment--expanded) {
			/*margin-left: calc(var(--Post-padding--horizontal) + var(--PostThumbnail-maxWidth) - var(--PostQuoteBlock-paddingLeft));*/
			/*margin-left: calc(var(--PostThumbnailContainer-width) - var(--PostQuoteBlock-paddingLeft));*/
			margin-left: calc(var(--PostThumbnailContainer-width));
			/* Without `max-width` a comment could become overflown
			   by a `<pre/>` code block. */
			max-width: calc(100% - var(--PostThumbnailContainer-width));
			.thread-comment__thumbnail {
				display: none;
				/*
				width: var(--PostQuoteBlock-paddingLeft);
				max-width: var(--PostQuoteBlock-paddingLeft);
				min-width: var(--PostQuoteBlock-paddingLeft);
				padding: 0;
				*/
			}
			.thread-comment__comment {
				/*margin-left: calc(var(--Post-padding--horizontal) / 2);*/
			}
		}

		.thread-comment--has-thumbnail:not(.comment-tree__comment--nested):not(.comment-tree__comment--expanded) {
			/*margin-left: calc(-1 * var(--PostQuoteBlock-paddingLeft) + (var(--PostThumbnail-maxWidth) - var(--PostThumbnail-width) - var(--PostQuoteBlock-paddingLeft)));*/
			margin-left: calc(var(--PostThumbnail-maxWidth) - var(--PostThumbnail-width));
			.thread-comment__thumbnail {
				/*margin-left: var(--PostQuoteBlock-paddingLeft);*/
				/*width: calc(var(--PostQuoteBlock-paddingLeft) + var(--PostThumbnailContainer-width) - 1 * (var(--PostThumbnail-maxWidth) - var(--PostThumbnail-width)));*/
				/*min-width: calc(var(--PostQuoteBlock-paddingLeft) + var(--PostThumbnailContainer-width) - 1 * (var(--PostThumbnail-maxWidth) - var(--PostThumbnail-width)));*/
				/* `1 * ` is to prevent the `calc()` expression being parsed incorrectly for some reason in Chrome. */
				width: calc(var(--PostThumbnailContainer-width) - 1 * (var(--PostThumbnail-maxWidth) - var(--PostThumbnail-width)));
				min-width: calc(var(--PostThumbnailContainer-width) - 1 * (var(--PostThumbnail-maxWidth) - var(--PostThumbnail-width)));
			}
		}

		.thread-comment--thread:not(.comment-tree__comment--nested):not(.comment-tree__comment--expanded) {
			/* Don't stretch short comments to full width. */
			display: inline-flex;
		}

		.thread-comment--thread.comment-tree__comment--nested,
		.thread-comment--thread.comment-tree__comment--expanded {
			width: 100%;
		}

		.thread-comment__container {
			/* `display: flex` is required to prevent `.thread-comment__container`
			   from stretching to `100%` of page width. */
			/* Also `display: flex` fixes weird extra vertical space at the bottom
			   when `.thread-comment`'s `display` is set to `inline-flex`. */
			display: flex;
			/* `flex-direction: column` is because there's `.thread-comment__margin`. */
			flex-direction: column;
	    align-items: flex-start;
		}
	}

	.thread-comment--thread {
		.thread-comment__thumbnail {
			margin-top: 1.35em;
		}
		&.thread-comment--opening {
			.thread-comment__thumbnail {
				margin-top: 1.9em;
			}
		}
		&.thread-comment--titled {
			.thread-comment__thumbnail {
				margin-top: 1.7em;
			}
			&.thread-comment--opening {
				.thread-comment__thumbnail {
					margin-top: 1.85em;
				}
			}
		}
		&.thread-comment--authored {
			.thread-comment__thumbnail {
				margin-top: 3.0em;
			}
			&.thread-comment--opening {
				.thread-comment__thumbnail {
					margin-top: 3.6em;
				}
			}
		}
	}

	.thread-comment--has-no-thumbnail {
		.thread-comment__thumbnail {
			/* `!important` overrides `.thread-comment--titled .thread-comment__thumbnail`
			   and  `.thread-comment--thread .thread-comment__thumbnail` selectors specificity. */
			/*padding-top: 0 !important;*/
			/*padding-bottom: 0 !important;*/
			margin-top: 0 !important;
		}
	}

	.thread-comment__comment {
		flex: auto;
	}

	.comment-tree__comment--nested {
		.post__quote-block {
			--PostQuoteBlock-marginLeft: 0px;
		}
	}
}

/* Comment tree comment borders. */
.thread-page__comments {
	/* The individual borders on `__thumbnail` and `__content`
	   will be replaced with the border on `.thread-comment` itself. */
	.comment-tree__comment--nested,
	.comment-tree__comment--expanded {
		> .thread-comment__thumbnail,
		> .thread-comment__comment {
			border-bottom: 0;
		}
	}

	/* `border-bottom` is added to `.comment-tree__branch-toggler`
	   for cases when deeply nested replies are expanded
	   so that the next higher-level expanded reply has an illusion
	   of having `border-top`. */
	.comment-tree__comment--nested,
	.comment-tree__comment--expanded/*,*/
	/*.comment-tree__branch-toggler*/
	{
		border-bottom: var(--CommentSeparator-width) solid var(--CommentSeparator-color);
	}

	/*
	.comment-tree__comment--nested {
		border-left: var(--CommentTree-borderWidth) solid var(--CommentSeparator-color);
	}
	*/
}

/* Thread comment styles end. */

/* `8ch.net` and chans running on `lynxchan` engine (such as `kohlchan.net`)
    have regular quotes and "inverse" quotes. */
/* `8ch.net` "inverse" quotes are red. */
.post__quote-block--inverse {
	--PostQuoteBlock-marginTop: var(--PostQuoteBlock-marginTop--inverse);
	--PostQuoteBlock-color: var(--PostQuoteBlock-color--inverse);
	--PostQuoteBlock-backgroundColor: var(--PostQuoteBlock-backgroundColor--inverse);
	--PostQuoteBlock-borderWidth: var(--PostQuoteBlock-borderWidth--inverse);
	--PostQuoteBlock-borderColor: var(--PostQuoteBlock-borderColor--inverse);
	.post__quote-marker {
		--PostQuoteBlockMarker-color: var(--PostQuoteBlockMarker-color--inverse);
		--PostQuoteBlockMarker-width: var(--PostQuoteBlockMarker-width--inverse);
		--PostQuoteBlockMarker-padding: var(--PostQuoteBlockMarker-padding--inverse);
		--PostQuoteBlockMarker-opacity: var(--PostQuoteBlockMarker-opacity--inverse);
	}
}

/* Using `.thread-page` instead of `.thread-comment--thread` here
   because `var(--Post-color--secondary)` is used in `thread-page__stats`. */
.thread-page {
	--Post-color--secondary: var(--Post-color--secondaryThread);
}

.post__footer-badge-icon--comments-count {
	/*margin-top: -0.1em;*/
	/*margin-right: 0.35em;*/
	margin-top: 0.05em;
	margin-right: 0.32em;
}

.post__footer-badge-icon--attachments-count {
	width: 0.95em;
	height: 0.95em;
	margin-top: 0em;
	margin-right: 0.35em;
}

.post__footer-badge-icon--unique-posters-count {
	width: 0.92em;
	height: 0.92em;
}

.post__footer-badge-icon--replies-count {
	/* The arrow icon's left side by default doesn't align
	   perfectly with the text's left border. */
	margin-left: 0.05em;
	margin-right: 0.35em;
}

/* `8ch.net` red heading. */
.post__text--heading {
	color: var(--PostSubheading-color);
	font-weight: bolder;
}

.post__text--ascii-shift-jis-art {
	display: block;
	line-height: 1.1;
	font-family: Mona, "MS PGothic", "ＭＳ Ｐゴシック", sans-serif;
	white-space: pre-wrap;
}