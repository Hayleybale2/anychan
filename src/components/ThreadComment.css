@import "../styles/common";

.thread-comment {
	padding-top: var(--Post-padding--vertical);
	padding-bottom: var(--Post-padding--vertical);
	padding-left: var(--Post-padding--horizontal);
	padding-right: var(--Post-padding--horizontal);
}

.thread-comment--compact {
	--Post-padding--vertical: var(--Post-padding--verticalCompact);
}

/* Thread comment styles begin. */

.thread-comment__thumbnail {
	display: none;
}

.thread-comment--thread {
	padding-top: 0;
	padding-bottom: 0;
	.thread-comment__thumbnail,
	.thread-comment__comment {
		padding-top: var(--Post-padding--vertical);
		padding-bottom: var(--Post-padding--vertical);
	}
	/* Adding a transparent border to post thumbnail so that
	   the comment's height doesn't change when it's expanded
	   and borders on `__thumbnail` and `__comment` are replaced
	   with the border on `.thread-comment` itself.
	   When using `virtual-scroller` it's better to not change
	   item height if not required. */
	.thread-comment__thumbnail {
		border-bottom: var(--CommentSeparator-width) solid transparent;
	}
	.thread-comment__comment {
		border-bottom: var(--CommentSeparator-width) solid var(--CommentSeparator-color);
	}
}

/* Add some left padding to first-level comment tree branch.
	If comments don't have any side padding
	then the root replies branch line would be ineligible
	because it would be drawn at the very screen edge (mobile devices).
	This CSS variable can be used for styling such special case. */
@mixin upto-s {
	:root {
		--CommentTreeBranch-paddingLeft--firstLevel: 0.25;
	}
	/* Setting `--PostThumbnailContainer-width` CSS variable on `<body/>`
	   because `--PostThumbnail-maxWidth` is defined on `<body/>`
	   because it's default value is defined on `:root`. */
	body {
		--PostThumbnailContainer-width: 0px;
	}
}

/* Move the first attachment to the left side of the comment on large screens. */
/* (classic imageboard message style) */
@mixin m-plus {
	/* Setting `--PostThumbnailContainer-width` CSS variable on `<body/>`
	   because `--PostThumbnail-maxWidth` is defined on `<body/>`
	   because it's default value is defined on `:root`. */
	body {
		--PostThumbnailContainer-width: calc(var(--PostThumbnail-maxWidth) + 2 * var(--Picture-borderWidth) + var(--PostThumbnail-marginRight));
	}

	.thread-comment--thread {
		/* Using `margin-right` instead of `padding-right` here
		   so that the expanded replies don't have their bottom border
		   past the "..." (more actions) button of a post. */
		margin-right: var(--Post-padding--horizontal);
		padding-right: 0px;
	}

	.thread-comment--thumbnail {
		--PostQuote-paddingLeft: calc(var(--PostThumbnail-marginRight) / 2);
		--PostQuote-paddingRight: 0px;
		display: flex;
	}

	/* Hide the first post attachment if it's already
	   being shown as the comment thumbnail. */
	.thread-comment--has-thumbnail {
		.post__attachments {
			.post__attachment-thumbnail--post-thumbnail-candidate {
				display: none;
			}
		}
	}

	.thread-comment__thumbnail {
		display: flex;
		justify-content: flex-end;
		/* In case of changing these also change `.sidebar`'s
		   `flex-basis` accordingly in `Application.css`. */
		width: var(--PostThumbnailContainer-width);
		min-width: var(--PostThumbnailContainer-width);
		/* Using `padding-right` instead of `margin-right` here
		   so that `border-bottom` is continuous. */
		padding-right: var(--PostThumbnail-marginRight);
		margin-top: 0.2em;
	}

	.thread-comment--thread {
		.thread-comment__thumbnail {
			margin-top: 1.35em;
		}
		&.thread-comment--opening {
			.thread-comment__thumbnail {
				margin-top: 1.9em;
			}
		}
		&.thread-comment--titled {
			.thread-comment__thumbnail {
				margin-top: 1.7em;
			}
			&.thread-comment--opening {
				.thread-comment__thumbnail {
					margin-top: 1.85em;
				}
			}
		}
		&.thread-comment--authored {
			.thread-comment__thumbnail {
				margin-top: 3.0em;
			}
			&.thread-comment--opening {
				.thread-comment__thumbnail {
					margin-top: 3.6em;
				}
			}
		}
	}

	.thread-comment--has-no-thumbnail {
		.thread-comment__thumbnail {
			/* `!important` overrides `.thread-comment--titled .thread-comment__thumbnail`
			   and  `.thread-comment--thread .thread-comment__thumbnail` selectors specificity. */
			/*padding-top: 0 !important;*/
			/*padding-bottom: 0 !important;*/
			margin-top: 0 !important;
		}
	}

	.thread-comment__comment {
		flex: auto;
	}

	.comment-tree__comment--nested {
		.post__quote-block {
			--PostQuote-marginLeft: 0px;
		}
	}
}

/* Comment tree comment borders. */
.thread-page__comments {
	/* The individual borders on `__thumbnail` and `__content`
	   will be replaced with the border on `.thread-comment` itself. */
	.comment-tree__comment--nested,
	.comment-tree__comment--expanded {
		> .thread-comment__thumbnail,
		> .thread-comment__comment {
			border-bottom: 0;
		}
	}

	/* `border-bottom` is added to `.comment-tree__branch-toggler`
	   for cases when deeply nested replies are expanded
	   so that the next higher-level expanded reply has an illusion
	   of having `border-top`. */
	.comment-tree__comment--nested,
	.comment-tree__comment--expanded,
	.comment-tree__branch-toggler {
		border-bottom: var(--CommentSeparator-width) solid var(--CommentSeparator-color);
	}

	.comment-tree__comment--nested {
		border-left: var(--CommentTree-borderWidth) solid var(--CommentSeparator-color);
	}
}

/* Thread comment styles end. */

/* `8ch.net` and chans running on `lynxchan` engine (such as `kohlchan.net`)
    have regular quotes and "inverse" quotes. */
/* `8ch.net` "inverse" quotes are red. */
.post__inline-quote--inverse {
	--PostQuote-marginTop: var(--PostQuote-marginTop--inverse);
	--PostQuote-color: var(--PostQuote-color--inverse);
	--PostQuote-backgroundColor: var(--PostQuote-backgroundColor--inverse);
	--PostQuote-borderWidth: var(--PostQuote-borderWidth--inverse);
	--PostQuote-borderColor: var(--PostQuote-borderColor--inverse);
	.post__quote-marker {
		--PostQuoteMarker-color: var(--PostQuoteMarker-color--inverse);
		--PostQuoteMarker-width: var(--PostQuoteMarker-width--inverse);
		--PostQuoteMarker-padding: var(--PostQuoteMarker-padding--inverse);
		--PostQuoteMarker-opacity: var(--PostQuoteMarker-opacity--inverse);
	}
}

/* Using `.thread-page` instead of `.thread-comment--thread` here
   because `var(--Post-color--secondary)` is used in `thread-page__stats`. */
.thread-page {
	--Post-color--secondary: var(--Post-color--secondaryThread);
}

.post__footer-badge-icon--comments-count {
	/*margin-top: -0.1em;*/
	/*margin-right: 0.35em;*/
	margin-top: 0.05em;
	margin-right: 0.32em;
}

.post__footer-badge-icon--attachments-count {
	width: 0.95em;
	height: 0.95em;
	margin-top: 0em;
	margin-right: 0.35em;
}

.post__footer-badge-icon--unique-posters-count {
	width: 0.92em;
	height: 0.92em;
}

.post__footer-badge-icon--replies-count {
	/* The arrow icon's left side by default doesn't align
	   perfectly with the text's left border. */
	margin-left: 0.05em;
	margin-right: 0.35em;
}

/* `8ch.net` red heading. */
.post__text--heading {
	color: var(--PostSubheading-color);
	font-weight: bolder;
}

.post__text--ascii-shift-jis-art {
	display: block;
	line-height: 1.1;
	font-family: Mona, "MS PGothic", "ＭＳ Ｐゴシック", sans-serif;
	white-space: pre-wrap;
}