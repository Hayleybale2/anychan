@import "../styles/common";

.InReplyToModal {
	--CommentSeparator-width: 1px;
	--CommentSeparator-width--outline: 0px;
	/*--InReplyToModalHeader-paddingTop: var(--unit);*/
	--InReplyToModalBackIcon-width: 0.9em;
	--InReplyToModalBackIcon-marginRight: 0.2em;
	--InReplyToModalBack-marginTop: calc(var(--unit) / 2);
	--InReplyToModalHeader-justifyContent--mobile: flex-end;
	--InReplyToModalHeader-justifyContent--desktop: flex-start;
	/* `.InReplyToModalHeader` is `position: abosolute` on large screens. */
	position: relative;
	width: 100%;
	max-width: var(--Content-maxWidth);
	.rrui__modal__content {
		margin: 0;
	}
	/* Don't show bottom border on comments. */
	.thread-comment--thread {
		border-bottom: none;
	}
	.comment-tree__branch-toggler {
		border-top: var(--CommentSeparator-width) solid var(--CommentSeparator-color);
	}
}

.left-handed {
	.InReplyToModal {
		--InReplyToModalHeader-justifyContent--mobile: flex-start;
	}
}

.InReplyToModalHeader {
	/* Without `z-index: 1` the "Back" and "Close" buttons
	   would be hidden under the post header. */
	position: relative;
	z-index: 1;
	display: flex;
	justify-content: var(--InReplyToModalHeader-justifyContent--mobile);
	margin-top: var(--InReplyToModalBack-marginTop);
	margin-bottom: calc(var(--InReplyToModalBack-marginTop) - var(--Post-padding--vertical));
	margin-left: var(--Post-padding--horizontal);
	margin-right: var(--Post-padding--horizontal);
	@mixin m-plus {
		justify-content: var(--InReplyToModalHeader-justifyContent--desktop);
		/* It's not `width: 100%` so that it doesn't cover the post header links and buttons. */
		position: absolute;
		left: 0;
		top: 0;
		/* The left arrow icon isn't aligned to the left side. The ~20% horizontal shift compensates that. */
		margin-left: calc(var(--Post-paddingLeft--thumbnail) - var(--InReplyToModalBackIcon-width) * 0.2);
		margin-top: var(--Post-padding--vertical);
		margin-bottom: 0;
	}
}

.InReplyToModalBack,
.InReplyToModalClose {
	display: flex;
	align-items: center;
	font-weight: var(--Post-fontWeight--secondary);
}

.InReplyToModalBackIcon {
	width: var(--InReplyToModalBackIcon-width);
	height: var(--InReplyToModalBackIcon-width);
	margin-right: var(--InReplyToModalBackIcon-marginRight);
}

.InReplyToModalBack,
.InReplyToModalClose {
	/*color: var(--Clickable-color--text);*/
	color: var(--Content-color-500);
	&:focus {
		color: var(--Clickable-color--text);
		.InReplyToModalBackText,
		.InReplyToModalCloseText {
			border-bottom: 1px solid currentColor;
		}
	}
	&:active {
		color: var(--Clickable-color--active);
	}
}

.InReplyToModalCloseIcon {
	--InReplyToModalClose-width: 0.8em;
	display: block;
	width: var(--InReplyToModalClose-width);
	height: var(--InReplyToModalClose-width);
	margin-right: 0.4em;
}

.InReplyToModalBackCounter {
	margin-right: 0.25em;
	&:before {
		content: '(';
	}
	&:after {
		content: ')';
	}
}

/* Don't show the top border on the main comment. */
.InReplyToModal {
	.rrui__modal__content {
		> .comment-tree {
			> .thread-comment__container {
				> .thread-comment--thread {
					border-top: none;
				}
				/*.thread-comment__thumbnail,
				.thread-comment__comment {
					padding-top: calc(var(--unit) * 0.5);
				}*/
			}
		}
	}
}