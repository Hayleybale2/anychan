@import "../styles/common.css";

.InReplyToModal {
	--CommentSeparator-width: 1px;
	--CommentSeparator-width--outline: 0px;

	/*--InReplyToModalHeader-paddingTop: var(--unit);*/
	--InReplyToModalBackIcon-width: 0.75em;
	--InReplyToModalBackIcon-marginRight: 0.2em;
	--InReplyToModalBack-marginTop: calc(var(--unit) / 2);
	--InReplyToModalHeader-justifyContent--mobile: flex-end;
	--InReplyToModalHeader-justifyContent--desktop: flex-end;
	--InReplyToModalCloseIcon-width: 0.65em;

	/* `.InReplyToModalHeader` is `position: abosolute` on large screens. */
	position: relative;
	width: var(--Content-maxWidth);

	/* `max-width` is also set on `.Comment` depending on whether
	   the "main" comment has PostThumbnail and whether it's expanded. */
	/*max-width: var(--CommentText-maxWidth);*/
	/* `--Content-maxWidth` is redefined on thread and channel page
	   to also include PostThumbnail-related dimensions. */
	max-width: var(--Content-maxWidth);

	.rrui__modal__content {
		margin: 0;
	}

	/* `border-top` is added to `.CommentTree-toggler`
		 for cases when deeply nested replies are expanded
		 so that the higher-level expanded reply has an illusion
		 of having a `border`. */
	.CommentTree-toggler {
		border-top: var(--CommentSeparator-width) solid var(--CommentSeparator-color);
	}

	.Comment {
		/* Stretch comments to full width in `InReplyToModal`
		   because there's no spacing between adjacent comments. */
		width: 100%;
	}
}

.Document--leftHanded {
	.InReplyToModal {
		--InReplyToModalHeader-justifyContent--mobile: flex-start;
	}
}

.InReplyToModalHeader {
	/* Without `z-index: 1` the "Back" and "Close" buttons
	   would be hidden under the post header. */
	position: relative;
	z-index: 1;
	display: flex;
	justify-content: var(--InReplyToModalHeader-justifyContent--mobile);
	margin-top: var(--InReplyToModalBack-marginTop);
	/*margin-bottom: calc(var(--InReplyToModalBack-marginTop) - var(--Post-paddingBottom));*/
	margin-left: var(--Post-paddingLeft);
	margin-right: var(--Post-paddingLeft);

	@mixin m-plus {
		justify-content: var(--InReplyToModalHeader-justifyContent--desktop);
		/* It's not `width: 100%` so that it doesn't cover the post header links and buttons. */
		/*position: absolute;*/
		/*left: 0;*/
		/*top: 0;*/
		/* The left arrow icon isn't aligned to the left side. The ~20% horizontal shift compensates that. */
		/*margin-left: calc(var(--Post-paddingLeft--has-thumbnail) - var(--InReplyToModalBackIcon-width) * 0.2);*/
		margin-left: var(--Post-paddingTop);
		margin-top: calc(var(--Post-paddingTop) + var(--CommentFooter-marginBottom));
		/*margin-bottom: -0.3em;*/
	}
}

.InReplyToModalBack,
.InReplyToModalClose {
	display: flex;
	align-items: center;
	/*font-weight: var(--Post-fontWeight--secondary);*/
}

.InReplyToModalBackIcon {
	width: var(--InReplyToModalBackIcon-width);
	height: var(--InReplyToModalBackIcon-width);
	margin-right: var(--InReplyToModalBackIcon-marginRight);
}

.InReplyToModalBack,
.InReplyToModalClose {
	color: var(--Clickable-color--text);
	/*color: var(--Content-color-500);*/
	.InReplyToModalBackText,
	.InReplyToModalCloseText {
		border-top: 1px solid transparent;
		border-bottom: 1px solid transparent;
	}
	&:focus {
		color: var(--Clickable-color--text);
		.InReplyToModalBackText,
		.InReplyToModalCloseText {
			border-bottom-color: currentColor;
		}
	}
	&:active {
		color: var(--Clickable-color--active);
	}
}

.InReplyToModalCloseIcon {
	display: block;
	width: var(--InReplyToModalCloseIcon-width);
	height: var(--InReplyToModalCloseIcon-width);
	margin-right: 0.4em;
}

/*
.InReplyToModalCloseText,
.InReplyToModalBackText {
	font-size: 80%;
}
*/

.InReplyToModalBackCounter {
	margin-right: 0.25em;
	&:before {
		content: '(';
	}
	&:after {
		content: ')';
	}
}

/* Comments in an `InReplyToModal` are styled
   a bit differently than on a thread page:
   they don't have spacing, and therefore
   they use borders instead of `box-shadow`. */
.InReplyToModal {
	/* Don't show bottom border on comments. */
	.Comment {
		border-bottom: none;
	}
	.rrui__modal__content {
		> .CommentTree {
			> .Comment-container {
				> .Comment {
					/* Don't show the top border on the main ("root", "first shown") comment. */
					border-top: none;
					&.Comment--hasThumbnail {
						margin-left: 0;
						.Comment-thumbnail {
							padding-left: 0;
						}
					}
					&.Comment--hasNoThumbnail {
						&.CommentTree-comment--expanded {
							/* When an expanded "reply" comment doesn't have a post thumbnail,
							   expand its `PostQuote`s all the way to the left because
							   `.Comment-thumbnailPlaceholder` element won't be rendered. */
							--PostQuoteBlock-paddingLeft--adjustment: 0px;
							--PostQuoteBlock-borderWidth--left: 0px;
						}
						&:not(.CommentTree-comment--expanded) {
							margin-left: 0;
							/* `--Content-maxWidth` is redefined on thread and channel page
							   to also include PostThumbnail-related dimensions,
							   so `--CommentText-maxWidth` is used here instead. */
							max-width: var(--CommentText-maxWidth);
						}
						.Comment-thumbnailPlaceholder {
							display: none;
						}
					}
				}
			}
		}
	}
}

.InReplyToModal {
	@mixin upto-s {
		min-width: calc(100vw - 2 * var(--unit));
		max-width: calc(100vw - 2 * var(--unit));
	}
}

.InReplyToModal-actions {
	display: flex;
	justify-content: flex-end;

	padding-left: var(--Post-paddingRight);
	padding-right: var(--Post-paddingRight);
	padding-top: var(--Post-paddingBottom);
	padding-bottom: var(--Post-paddingBottom);
}

.InReplyToModalBack {
	margin-right: var(--Post-paddingRight);
}