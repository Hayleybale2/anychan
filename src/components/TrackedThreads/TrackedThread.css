.TrackedThread {
	position: relative;
	height: var(--List-lineHeight);
	font-size: var(--List-fontSize);
	border-top: 1px solid var(--List-borderColor);
	border-bottom: 1px solid var(--List-borderColor);
}

.TrackedThread,
.TrackedThread-inner {
	display: flex;
	align-items: center;
}

.TrackedThread-inner {
	height: 100%;
	/* `min-width: 0` fixes overflow. */
	min-width: 0;
	padding-left: var(--unit);
	padding-right: var(--unit);
	/*padding-right: var(--List-lineHeight);*/
	flex: 1;
	/* `z-index: 1` is used so that the `<Link/>`
	   is above the "Remove" `<button/>` when hovered/clicked. */
	z-index: 1;
}

.TrackedThread--expired,
.TrackedThread--edit {
	.TrackedThread-inner {
		padding-right: var(--ListButton-padding);
		margin-right: calc(-1 * var(--ListButton-padding));
	}
}

/*
.TrackedThread--untracked {
	.TrackedThread-inner {
		position: relative;
		padding-right: 0.4em;
		margin-right: 0;
	}
	.TrackedThread-inner:before {
		display: block;
		content: '';
		position: absolute;
		width: calc(100% - var(--unit) - 0.4em + 0.2em);
		height: 1px;
		left: calc(var(--unit) - 0.2em);
		top: 50%;
		z-index: 1;
		background-color: currentColor;
	}
}
*/

.TrackedThread--expired {
	--TrackedThread-color: var(--Sidebar-color-600);
	color: var(--TrackedThread-color);
	.TrackedThread-channel,
	.TrackedThread-title {
		opacity: 0.75;
		/*cursor: default;*/
		color: var(--TrackedThread-color);
	}
	.TrackedThread-thumbnail {
		--Picture-borderColor: var(--Sidebar-color-200);
		--Picture-backgroundColor: var(--Sidebar-backgroundColor);
		.Picture-loadingError {
			color: var(--Sidebar-color-500);
		}
	}
}

.TrackedThread--untracked {
	.TrackedThread-channel,
	.TrackedThread-title {
		text-decoration: line-through;
	}
}

.TrackedThread-thumbnail {
	margin-right: 0.5em;
	/* Prevents the `<Picture/>` from being clickable.
	   (for example, when the image wasn't found). */
	pointer-events: none;
	.Picture-loadingError {
		width: 1em;
		height: 1em;
	}
}

.TrackedThread:not(.TrackedThread--expired) {
	--ChannelUrl-color: var(--Channels-color--active);

	/* Using this level of specificity because otherwise
	   `:not()` would have higher priority. */
	&.TrackedThread--selected {
		background-color: var(--Channels-backgroundColor--selected);
		border-top: 1px solid var(--List-borderColor--selected);
		border-bottom: 1px solid var(--List-borderColor--selected);
	}

	.TrackedThread-inner--link {
		&:hover {
			background-color: var(--Channels-backgroundColor--hover);
			--ChannelUrl-slash-color: var(--ChannelUrl-slash-color--hover);
		}
		&:active {
			background-color: var(--Channels-backgroundColor--active);
			--ChannelUrl-slash-color: var(--ChannelUrl-slash-color--active);
			.TrackedThread-title {
				color: var(--Channels-color--active);
			}
		}
	}
}

.TrackedThread-title {
	/* `min-width: 0` fixes overflow. */
	min-width: 0;
	margin-left: 0.3em;
	color: var(--Channels-color);
	flex: 1;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

.TrackedThread-newReplies,
.TrackedThread-newComments {
	margin-left: 0.4em;
}

.TrackedThread-newReplies + .TrackedThread-newComments {
	margin-left: 0.25em;
}

.TrackedThread-newReplies {
	padding-left: 0.15em;
	padding-right: 0.15em;
	border-radius: 0.2em;
	/*color: var(--Sidebar-color--accent);*/
	background-color: currentColor;
	color: var(--Sidebar-backgroundColor);
}

.TrackedThread-undoUntrack {
	margin-right: calc((var(--List-lineHeight) - var(--ListButtonIcon-width)) / 2);
	margin-left: var(--ListButton-padding);
}